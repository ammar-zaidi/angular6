{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../deploy/actions.ts"],"names":[],"mappings":";;;;;;;;;;AAKA,SAA8B,MAAM,CAClC,MAMC,EACD,OAAuB,EACvB,WAAmB,EACnB,OAAe;;QAEf,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;QAED,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAE5C,OAAO,CAAC,MAAM,CAAC,IAAI,CACjB,gBAAgB,OAAO,CAAC,MAAM,CAAC,OAAO,MACpC,aAAa,CAAC,CAAC,CAAC,kBAAkB,aAAa,GAAG,CAAC,CAAC,CAAC,EACvD,EAAE,CACH,CAAC;QAEF,MAAM,MAAM,GAAG;YACb,MAAM,EAAE,OAAO;YACf,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO;SACtB,CAAC;QAGZ,IAAI,aAAa,EAAE;YACjB,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QAED,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACnD,MAAM,KAAK,CAAC,MAAM,CAAC;QAEnB,MAAM,MAAM,CAAC,GAAG,CACd,WAAW,EACX,OAAO,EACN,OAAO,CAAC,MAAuC,CACjD,CAAC;IACJ,CAAC;CAAA;AA1CD,yBA0CC","sourcesContent":["import { BuilderContext, Target } from '@angular-devkit/architect';\nimport { logging } from '@angular-devkit/core';\n\nimport { Schema } from './schema';\n\nexport default async function deploy(\n  engine: {\n    run: (\n      dir: string,\n      options: Schema,\n      logger: logging.LoggerApi\n    ) => Promise<void>;\n  },\n  context: BuilderContext,\n  projectRoot: string,\n  options: Schema\n) {\n  if (!context.target) {\n    throw new Error('Cannot execute the build target');\n  }\n\n  const configuration = options.configuration;\n\n  context.logger.info(\n    `ðŸ“¦ Building \"${context.target.project}\". ${\n      configuration ? `Configuration \"${configuration}\"` : ''\n    }`\n  );\n\n  const target = {\n    target: 'build',\n    project: context.target.project\n  } as Target;\n\n  // Set the configuration if set on the options\n  if (configuration) {\n    target.configuration = configuration;\n  }\n\n  const build = await context.scheduleTarget(target);\n  await build.result;\n\n  await engine.run(\n    projectRoot,\n    options,\n    (context.logger as unknown) as logging.LoggerApi\n  );\n}\n"]}